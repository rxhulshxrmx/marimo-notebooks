import{_ as a,l as e,I as s,d as p,K as n}from"./mermaid-D9TTXveo.js";import{p as m}from"./radar-MK3ICKWK-DpxMM0Qw.js";import"./index-g8LxgBK2.js";import"./transform-BzDy4yXW.js";import"./timer-B5eI7Tcu.js";import"./step-BwsUM5iJ.js";import"./_baseEach-AMF-7d2J.js";import"./_baseUniq-DmGC0EvQ.js";import"./min-DHnRmciI.js";import"./_baseMap-CtLb1-E9.js";import"./clone-Yb_iboYC.js";import"./_createAggregator-nAviCUEI.js";var d={parse:a(async r=>{const t=await m("info",r);e.debug(t)},"parse")},g={version:n.version},v={parser:d,db:{getVersion:a(()=>g.version,"getVersion")},renderer:{draw:a((r,t,i)=>{e.debug(`rendering info diagram
`+r);const o=s(t);p(o,100,400,!0),o.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)},"draw")}};export{v as diagram};
